{
  "name": "screenfull",
  "version": "1.2.1",
  "description": "Simple wrapper for cross-browser usage of the JavaScript Fullscreen API, which lets you bring the page or any element into fullscreen.",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/screenfull.js.git"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "main": "dist/screenfull.js",
  "files": [
    "dist/screenfull.js"
  ],
  "keywords": [
    "browser",
    "fullscreen"
  ],
  "devDependencies": {
    "grunt": "^0.4.1",
    "grunt-contrib-concat": "^0.4.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-uglify": "^0.4.0",
    "load-grunt-tasks": "^0.4.0"
  },
  "gitHead": "2b11c98235127b4dcdd4a9a0fc3a8bcd7441faff",
  "readme": "# screenfull.js\r\n\r\n> Simple wrapper for cross-browser usage of the JavaScript [Fullscreen API](https://developer.mozilla.org/en/DOM/Using_full-screen_mode), which lets you bring the page or any element into fullscreen. Smoothens out the browser implementation differences, so you don't have too.\r\n\r\n\r\n### [Demo](http://sindresorhus.com/screenfull.js)\r\n\r\n### [Check out my other projects](https://github.com/sindresorhus?tab=repositories)\r\n\r\n\r\n## Install\r\n\r\nOnly 0.7 kB gzipped.\r\n\r\nDownload the [production version][min] or the [development version][max].\r\n\r\n[min]: https://github.com/sindresorhus/screenfull.js/raw/gh-pages/dist/screenfull.min.js\r\n[max]: https://github.com/sindresorhus/screenfull.js/raw/gh-pages/dist/screenfull.js\r\n\r\n```sh\r\n$ npm install --save screenfull\r\n```\r\n\r\n```sh\r\n$ bower install --save screenfull\r\n```\r\n\r\n\r\n## Why?\r\n\r\n### Screenfull\r\n\r\n```js\r\nif (screenfull.enabled) {\r\n\tscreenfull.request();\r\n}\r\n```\r\n\r\n### Vanilla JavaScript\r\n\r\n```js\r\ndocument.fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.documentElement.webkitRequestFullScreen;\r\n\r\nfunction requestFullscreen(element) {\r\n\tif (element.requestFullscreen) {\r\n\t\telement.requestFullscreen();\r\n\t} else if (element.mozRequestFullScreen) {\r\n\t\telement.mozRequestFullScreen();\r\n\t} else if (element.webkitRequestFullScreen) {\r\n\t\telement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\r\n\t}\r\n}\r\n\r\nif (document.fullscreenEnabled) {\r\n\trequestFullscreen(document.documentElement);\r\n}\r\n\r\n// Actually it's more if you want it to work in Safari, but let's not go there...\r\n```\r\n\r\n\r\n## Support\r\n\r\n[Supported browsers](http://caniuse.com/fullscreen)\r\n\r\nSafari 5.1 doesn't support use of the keyboard in fullscreen.\r\n\r\n\r\n## Documentation\r\n\r\n\r\n### Examples\r\n\r\n\r\n#### Fullscreen the page\r\n\r\n```js\r\ndocument.getElementById('button').addEventListener('click', function () {\r\n\tif (screenfull.enabled) {\r\n\t\tscreenfull.request();\r\n\t} else {\r\n\t\t// Ignore or do something else\r\n\t}\r\n});\r\n```\r\n\r\n\r\n#### Fullscreen an element\r\n\r\n```js\r\nvar elem = document.getElementById('target');\r\ndocument.getElementById('button').addEventListener('click', function () {\r\n\tif (screenfull.enabled) {\r\n\t\tscreenfull.request(elem);\r\n\t}\r\n});\r\n```\r\n\r\n\r\n#### Fullscreen an element with jQuery\r\n\r\n```js\r\nvar target = $('#target')[0]; // Get DOM element from jQuery collection\r\n$('#button').click(function () {\r\n\tif (screenfull.enabled) {\r\n\t\tscreenfull.request(target);\r\n\t}\r\n});\r\n```\r\n\r\n\r\n#### Toggle fullscreen on a image with jQuery\r\n\r\n```js\r\n$('img').click(function () {\r\n\tif (screenfull.enabled) {\r\n\t\t// We can use `this` since we want the clicked element\r\n\t\tscreenfull.toggle(this);\r\n\t}\r\n});\r\n```\r\n\r\n\r\n#### Detect fullscreen change\r\n\r\n```js\r\nif (screenfull.enabled) {\r\n\tdocument.addEventListener(screenfull.raw.fullscreenchange, function () {\r\n\t\tconsole.log('Am I fullscreen? ' + (screenfull.isFullscreen ? 'Yes' : 'No'));\r\n\t});\r\n}\r\n```\r\n\r\nSee the [demo](http://sindresorhus.com/screenfull.js) for more examples, and view the source.\r\n\r\nYou can check for fullscreen support by checking the truthy/falsy value of `screenfull` as done in the example above.\r\n\r\n\r\n### Methods\r\n\r\n#### .request()\r\n\r\nMake an element fullscreen.\r\n\r\nAccepts a DOM element. Default is `<html>`. If called with another element than the currently active, it will switch to that if it's a decendant.\r\n\r\nIf your page is inside an `<iframe>` you will need to add a `allowfullscreen` attribute (+ `webkitallowfullscreen` and `mozallowfullscreen`).\r\n\r\nKeep in mind that the browser will only enter fullscreen when initiated by user events like click, touch, key.\r\n\r\n#### .exit()\r\n\r\nBrings you out of fullscreen.\r\n\r\n#### .toggle()\r\n\r\nRequests fullscreen if not active, otherwise exits.\r\n\r\n#### .onchange()\r\n\r\n<del>Override this method to get notified about fullscreen changes.</del>\r\n\r\nYou should rather use a real event listener:\r\n\r\n```js\r\ndocument.addEventListener(screenfull.raw.fullscreenchange, function () {});\r\n```\r\n\r\n#### .onerror()\r\n\r\n<del>Override this method to get notified about fullscreen errors.</del>\r\n\r\nYou should rather use a real event listener:\r\n\r\n```js\r\ndocument.addEventListener(screenfull.raw.fullscreenerror, function () {});\r\n```\r\n\r\n\r\n### Properties\r\n\r\n#### .isFullscreen\r\n\r\nReturns a boolean whether fullscreen is active.\r\n\r\n#### .element\r\n\r\nReturns the element currently in fullscreen, otherwise `null`.\r\n\r\n#### .enabled\r\n\r\nReturns a boolean whether you are allowed to enter fullscreen. If your page is inside an `<iframe>` you will need to add a `allowfullscreen` attribute (+ `webkitallowfullscreen` and `mozallowfullscreen`).\r\n\r\n#### .raw\r\n\r\nExposes the raw properties (prefixed if needed) used internally: `requestFullscreen`, `exitFullscreen`, `fullscreenElement`, `fullscreenEnabled`, `fullscreenchange`, `fullscreenerror`\r\n\r\n```js\r\n$(document).on(screenfull.raw.fullscreenchange, function () {\r\n\tconsole.log('Fullscreen change');\r\n});\r\n```\r\n\r\n\r\n## Resources\r\n\r\n- [Using the Fullscreen API in web browsers](http://hacks.mozilla.org/2012/01/using-the-fullscreen-api-in-web-browsers/)\r\n- [MDN - Fullscreen API](https://developer.mozilla.org/en/DOM/Using_full-screen_mode)\r\n- [W3C Fullscreen spec](http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html)\r\n- [Building an amazing fullscreen mobile experience](http://www.html5rocks.com/en/mobile/fullscreen/)\r\n\r\n\r\n## License\r\n\r\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\r\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/screenfull.js/issues"
  },
  "homepage": "https://github.com/sindresorhus/screenfull.js#readme",
  "_id": "screenfull@1.2.1",
  "_shasum": "87b3c2bc84006416684aaafc10a252f9747066d5",
  "_from": "git+https://github.com/jeroencoumans/screenfull.js.git#gh-pages",
  "_resolved": "git+https://github.com/jeroencoumans/screenfull.js.git#2b11c98235127b4dcdd4a9a0fc3a8bcd7441faff"
}
